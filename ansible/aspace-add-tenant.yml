---
#### Use --extra-vars "tenant_name=<new tenant name>" to the
#ansible-playbook call to set new tenant name
-   hosts: localhost
    connection: local
    gather_facts: True         
    vars:
      db_server: 'dsc-aspace-dev.crqkpkb4l2po.us-east-1.rds.amazonaws.com'
      db_port: 3306
      db_user: 'dsc_mysql_admin'
      dir_code_src: '~/code/'
      dir_servers: '~/servers/'
      dir_aspace_root: '~/aspace/'
      url_jdbc_base: "jdbc:mysql://{{ db_server }}:{{ db_port }}/"
      url_jdbc_suffix: '&useUnicode=true&characterEncoding=UTF-8'
    tasks:
    - fail: msg='Need to set tenant name by adding --extra-vars "tenant_name=<new tenant name>" to ansible-playbook call'
      when: tenant_name == None
    - name: check_appstrap
      shell: . $HOME/appstrap/setenv.sh
    - include: tasks/setvars.yml  # sets {{ role_home_dir.stdout }}
    - name: get the db master password
      shell: "cat ~/.dbpass"
      register: pswd_db_master 
    - name: generate a random password for tenant db user
      shell: "cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16"
      register: pswd_db_user 
    - debug: msg="MYSQL PASSWORD FOR {{ tenant_name }} -- {{ pswd_db_user.stdout }}"
    - include: tasks/generate_aspace_secrets.yml
    #- name: create tenant group
    #  command: sudo /usr/sbin/groupadd {{ tenant_name }}
#    - name: create tenant user
#      command: sudo /usr/sbin/useradd {{ tenant_name }}
#      ignore_errors: yes
    - debug: msg="MYSQL PASSWORD FOR {{ tenant_name }} -- {{ pswd_db_user.stdout }}"
    - name: create mysql database
      mysql_db: name={{ tenant_name }} encoding='utf8' login_host={{ db_server }} login_password={{ pswd_db_master.stdout }} login_user={{ db_user }}
    - name: create mysql user {{ tenant_name }} with PASSWORD {{ random_pwd.stdout }}
      mysql_user: login_host={{ db_server }} login_password={{ pswd_db_master.stdout }} login_user={{ db_user }} host='%' name={{ tenant_name }} password={{ pswd_db_user.stdout }} priv={{ tenant_name }}.*:ALL
      #mysql_user: login_host={{ db_server }} login_password={{ pswd_db_master.stdout }} login_user={{ db_user }} name={{ tenant_name }} password={{ pswd_db_user.stdout }} priv={{ tenant_name }}.*:ALL
    - name: make tenant dir template dirs to tenant dir
      file: path={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace state=directory
    - include: tasks/aspace_init_tenant.yml
    - set_fact:
        url_jdbc_aspace: "{{ url_jdbc_base }}{{ tenant_name }}?user={{ tenant_name }}&password={{ pswd_db_user.stdout }}{{ url_jdbc_suffix }}"
    - name: config tenant db access
      template: src=templates/aspace/config.rb.j2 dest={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/config/config.rb
    - name: config tenant instance
      template: src=templates/aspace/instance_hostname.rb.j2 dest={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/config/instance_{{ hostname.stdout }}.rb
    - name: setup tenant database
      shell: chdir={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/ ./scripts/setup-database.sh

    - debug: msg="MYSQL PASSWORD FOR {{ tenant_name }} -- {{ pswd_db_user.stdout }}"
