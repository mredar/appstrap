---
# Use --extra-vars "tenant_name=<new tenant name>" to the
# ansible-playbook call to set existing tenant name
# this playbook will configure an existing tenant to a new cluster instance
# must also pass following:
# --extra-vars "tenant_db_password=<tenant_db_password>"
# Database for tenant must be already configured.
-   hosts: aspace-cluster
    gather_facts: True         
    vars:
      db_server: 'aspace.crqkpkb4l2po.us-east-1.rds.amazonaws.com'
      db_port: 3306
      db_user: 'rds_aspace_admin'
      dir_code_src: '~/code/'
      dir_servers: '~/servers/'
      dir_aspace_root: '/aspace/'
      url_jdbc_base: "jdbc:mysql://{{ db_server }}:{{ db_port }}/"
      url_jdbc_suffix: '&useUnicode=true&characterEncoding=UTF-8'
    tasks:
    - fail: msg='Need to set tenant name by adding --extra-vars "tenant_name=<new tenant name>" to ansible-playbook call'
      when: tenant_name == None
    - fail: msg='Need to set tenant name by adding --extra-vars "tenant_name=<new tenant name>" to ansible-playbook call'
      when: tenant_db_password == None
    - name: check_appstrap
      shell: . $HOME/appstrap/setenv.sh
    - include: tasks/setvars.yml  # sets {{ role_home_dir.stdout }}
    - name: get start port
      shell: cat ~/.port_next_tenant
      register: start_port
    - include: tasks/generate_aspace_secrets.yml
    - name: create tenant user
      command: sudo /usr/sbin/useradd -U {{ tenant_name }}
    - debug: msg="MYSQL PASSWORD FOR {{ tenant_name }} -- {{ tenant_db_password }}"
    - name: copy tenant dir template dirs to tenant dir
      shell: "cp -a {{ dir_aspace_root }}/archivesspace/tenants/_template {{ dir_aspace_root}}/archivesspace/tenants/{{ tenant_name }}"
    - name: run init_tenant
      shell: chdir={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/  ./init_tenant.sh stable
    - set_fact:
        url_jdbc_aspace: "{{ url_jdbc_base }}{{ tenant_name }}?user={{ tenant_name }}&password={{ tenant_db_password }}{{ url_jdbc_suffix }}"
    - name: config tenant db access
      template: src=templates/aspace/config.rb.j2 dest={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/config/config.rb
    - name: config tenant instance
      template: src=templates/aspace/instance_hostname.rb.j2 dest={{ dir_aspace_root }}/archivesspace/tenants/{{ tenant_name }}/archivesspace/config/instance_{{ ansible_hostname }}.rb mode=755
    - name: update starting port for next tenant
      lineinfile: dest=~/.port_next_tenant regexp=(\\d)+ line="{{ start_port.stdout|int + 10 }}" state=present backrefs=yes

    - name: create monit monitor for tenant
      sudo: yes
      template: src=templates/aspace/service.monitrc dest=/etc/monit.d/{{ tenant_name }}-aspace.monitrc
    - name: save tenant information
      lineinfile: dest=~/.tenant_info create=yes line="{{ tenant_name }} - {{ tenant_db_password }} | front port - {{ start_port.stdout }} | public port - {{ start_port.stdout|int + 1}}"
    - name: save tenant information, master
      delegate_to: 127.0.0.1
      lineinfile: dest=~/.tenant_info create=yes line="{{ tenant_name }} - {{ tenant_db_password }} | host - {{ ansible_hostname}} | front port - {{ start_port.stdout }} | public port - {{ start_port.stdout|int + 1}}"
    - debug: msg="MYSQL PASSWORD FOR {{ tenant_name }} -- {{ tenant_db_password }}"
    - debug: msg="Hostname-> {{ ansible_hostname }}"
    - debug: msg="Archivespace public  port-> {{ start_port.stdout|int + 1 }}"
    - debug: msg="Archivespace frontend port-> {{ start_port.stdout }}"
    - name: start archivesspace server
      sudo: yes
      shell: /etc/init.d/aspace-cluster start-tenant {{ tenant_name }}
    - name: reload monit
      sudo: yes
      command: monit reload
    - name: reload monit
      sudo: yes
      command: monit reload
    - name: monitor new tenant instance
      sudo: yes
      command: monit monitor {{ tenant_name }}-aspace
